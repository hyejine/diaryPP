<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.example.demo.model.dao.BoardMapper">
  
    <resultMap type="DiaryDto" id="diaryJoin">
      <result property="diary_id" column="diary_id"/>
      <result property="diary_create_write" column="diary_create_write"/>
      <result property="diary_date" column="diary_date"/>
      <result property="user_email" column="user_email"/>
      <result property="diary_title" column="diary_title"/>
      <result property="diary_content" column="diary_content"/>
      <result property="emoji_image_id" column="emoji_image_id"/>
      <collection property="emojiImageDto" resultMap="emojiImageJoin"/>
    </resultMap>
    
    <resultMap type="EmojiImageDto" id="emojiImageJoin">
		  <result column="id" property="id" />
		  <result column="emoji_type" property="emoji_type" />
		  <result column="emoji_image" property="emoji_image" />
	  </resultMap>

  <insert id="saveQuill"  parameterType="DiaryDto" useGeneratedKeys="true" keyProperty="diary_id">
    INSERT 
    INTO diary_table(diary_title, user_email, diary_content, diary_date, emoji_image_id, diary_create_write) 
    VALUES (#{diary_title}, #{user_email}, #{diary_content}, #{diary_date}, #{emoji_image_id}, NOW())
  </insert>

  <insert id="updateQuill"  parameterType="DiaryDto">
    <!-- <selectKey keyColumn="diary_id" keyProperty="DiaryDto" resultType="java.lang.Long" order="AFTER">
      select * from diary_table where diary_id = #{diary_id}
    </selectKey> -->
    UPDATE diary_table
    SET diary_title = #{diary_title}, diary_content = #{diary_content}, emoji_image_id = #{emoji_image_id} WHERE diary_id = #{diary_id}
  </insert>

  <select id="getBoard" resultMap="diaryJoin" parameterType="DiaryDto">
	  SELECT e.id, e.emoji_type, e.emoji_image, 
    d.diary_id, d.diary_create_write, d.diary_date, d.user_email, d.diary_title, d.diary_content, d.emoji_image_id 
    FROM diary_table d, emoji_image_table e WHERE d.emoji_image_id = e.id 
    <if test="diary_id != -1">
      AND diary_id=#{diary_id}
    </if>
  </select> 

  <!-- 월별 조회되도록 -->
  <select id="getMonthBoard" resultMap="diaryJoin" parameterType="DiaryDto">
	  SELECT e.id, e.emoji_type, e.emoji_image, 
    d.diary_id, d.diary_create_write, d.diary_date, d.user_email, d.diary_title, d.diary_content, d.emoji_image_id 
    FROM diary_table d, emoji_image_table e WHERE d.emoji_image_id = e.id order by diary_date
    <!-- AND  DATE_FORMAT(diary_date,'%Y-%m') = DATE_FORMAT(now(),'2022-09') -->
  </select> 

  <delete id="deleteBoard" parameterType="DiaryDto">
    DELETE FROM diary_table WHERE diary_id = #{diary_id}
  </delete>

  <select id="getMonth" resultType="DiaryDto">
    select * from diary_table where diary_date LIKE '%${diary_date}%' order by diary_date
  </select>

  <select id="getMonthProgress" resultType="java.util.Map" >
    select e.id, e.emoji_type, e.emoji_mood, e.emoji_image,ifnull(d.emojicount,0) as count from emoji_image_table e left outer join (select emoji_image_id, count(emoji_image_id) as emojicount 
    from diary_table where diary_date LIKE '%${diary_date}%'group by emoji_image_id) as d on (e.id = d.emoji_image_id) 
    where e.emoji_type Like "%default%" group by e.id
  </select> 

  <select id="getYearProgress" resultType="java.util.Map" >
    select e.id, e.emoji_type, e.emoji_mood, e.emoji_image,ifnull(d.emojicount,0) as count from emoji_image_table e left outer join (select emoji_image_id, count(emoji_image_id) as emojicount 
    from diary_table where diary_date LIKE '%${diary_date}%'group by emoji_image_id) as d on (e.id = d.emoji_image_id) 
    where e.emoji_type Like "%default%" group by e.id
  </select>

  <select id="getYear" resultType="java.util.Map" >
    select date_format(diary_date, '%m')as month, 
      coalesce(sum(case when emoji_image_id = '1' then 1 ELSE 0 end),0) as angry,
      coalesce(sum(case when emoji_image_id = '2' then 1 ELSE 0 end),0) as sad,
      coalesce(sum(case when emoji_image_id = '3' then 1 ELSE 0 end),0) as panic,
      coalesce(sum(case when emoji_image_id = '4' then 1 ELSE 0 end),0) as surprise,
      coalesce(sum(case when emoji_image_id = '5' then 1 ELSE 0 end),0) as happy,
      coalesce(sum(case when emoji_image_id = '6' then 1 ELSE 0 end),0) as very_happy
    from diary_table
    where diary_date LIKE '%${diary_date}%'
    group by month
  </select> 
</mapper>